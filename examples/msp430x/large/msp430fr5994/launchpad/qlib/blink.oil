OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {
  /* This fix the default STACKSIZE of tasks */
  TASK {
    UINT32 STACKSIZE = 200 ;
  } ;

  /* This fix the default STACKSIZE of ISRs */
  ISR {
    UINT32 STACKSIZE = 200 ;
  } ;
};

CPU blink {
  OS config {
    STATUS = EXTENDED;
    PAINT_STACK = TRUE;
    PAINT_REGISTERS = TRUE;
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../../../..";
      APP_SRC = "blink.c";
      APP_SRC = "leds.c";
      APP_NAME = "blink_exe.out";
      CFLAGS  = "-Og -g3 -gdwarf-2 -ggdb"; //gdb usage
      LDFLAGS = "-Map=blink.map";
      LDFLAGS = "/Users/bernabeu-a/Code/trampoline/examples/msp430x/large/msp430fr5994/launchpad/qlib/qlib/QmathLib_CCS_MPY32_5xx_6xx_CPUX_large_code_large_data.lib";

//       LDFLAGS = "/Users/bernabeu-a/Code/trampoline/examples/msp430x/large/msp430fr5994/launchpad/qlib/qlib/QmathLib_CCS_MPYsoftware_CPUX_large_code_large_data.lib";

      //use either msp-gcc (provided with Energia)..
//      COMPILER  = "msp430-gcc";
//      ASSEMBLER = "msp430-gcc";
//      LINKER    = "msp430-ld";
//      COPIER    = "msp430-objcopy";
      //or GCC for MSP (provided by TI)
      COMPILER  = "msp430-elf-gcc";
      ASSEMBLER = "msp430-elf-gcc";
      LINKER    = "msp430-elf-ld";
      COPIER    = "msp430-elf-objcopy";
      CFLAGS    = "-I/opt/msp430-gcc-support-files/include";
      SYSTEM = PYTHON;
      LIBRARY = IQMATHLIB;
    };
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };

  APPMODE Std {};

  TASK blink {
    PRIORITY = 3;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
  };

  ALARM blink_blink {
    COUNTER = SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = blink;
    };
    AUTOSTART = TRUE {
      APPMODE = Std;
      ALARMTIME = 500;
      CYCLETIME = 500;
    };
  };

};
