/**
 * @file tpl_invoque.S
 *
 * @section descr File description
 *
 * System call user level invoque API.
 *
 * @warning this file is generated by gen_invoque.sh based on the 
 * tpl_os_service_ids.h header file.
 *
 * @section copyright Copyright
 *
 * Trampoline OS
 *
 * Trampoline is copyright (c) IRCCyN 2005+
 * Copyright ESEO for function and data structures documentation and ARM port
 * Trampoline is protected by the French intellectual property law.
 *
 * This software is distributed under the Lesser GNU Public Licence
 *
 * @section infos File informations
 *
 * $$Date$$
 * $$Rev$$
 * $$Author$$
 * $$URL$$
 */
#include "tpl_os_application_def.h"
#include "tpl_service_ids.h"

#if WITH_SYSTEM_CALL == NO
#error "This file should not be part of your project since WITH_SYSTEM_CALL is not defined"
#endif


#include "tpl_assembler.h"

#if WITH_MEMMAP == NO

#endif /* WITH_MEMMAP == NO */

#define API_START_SEC_CODE
#include "tpl_as_memmap.h"


 /*============================================================================
  * Service GetActiveApplicationMode
  */
.global GetActiveApplicationMode
.type   GetActiveApplicationMode, %function
GetActiveApplicationMode:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_GetActiveApplicationMode, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service StartOS
  */
.global tpl_start_os
.type   tpl_start_os, %function
tpl_start_os:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_StartOS, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service ShutdownOS
  */
.global ShutdownOS
.type   ShutdownOS, %function
ShutdownOS:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_ShutdownOS, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service EnableAllInterrupts
  */
.global EnableAllInterrupts
.type   EnableAllInterrupts, %function
EnableAllInterrupts:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_EnableAllInterrupts, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service DisableAllInterrupts
  */
.global DisableAllInterrupts
.type   DisableAllInterrupts, %function
DisableAllInterrupts:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_DisableAllInterrupts, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service ResumeAllInterrupts
  */
.global ResumeAllInterrupts
.type   ResumeAllInterrupts, %function
ResumeAllInterrupts:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_ResumeAllInterrupts, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service SuspendAllInterrupts
  */
.global SuspendAllInterrupts
.type   SuspendAllInterrupts, %function
SuspendAllInterrupts:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_SuspendAllInterrupts, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service ResumeOSInterrupts
  */
.global ResumeOSInterrupts
.type   ResumeOSInterrupts, %function
ResumeOSInterrupts:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_ResumeOSInterrupts, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service SuspendOSInterrupts
  */
.global SuspendOSInterrupts
.type   SuspendOSInterrupts, %function
SuspendOSInterrupts:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_SuspendOSInterrupts, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service CallTerminateISR2
  */
.global CallTerminateISR2
.type   CallTerminateISR2, %function
CallTerminateISR2:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_CallTerminateISR2, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     /*
      * Calla to avoid stack underflow
      */
    calla #tpl_sc_handler
    
 /*============================================================================
  * Service ActivateTask
  */
.global ActivateTask
.type   ActivateTask, %function
ActivateTask:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_ActivateTask, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service TerminateTask
  */
.global TerminateTask
.type   TerminateTask, %function
TerminateTask:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_TerminateTask, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service ChainTask
  */
.global ChainTask
.type   ChainTask, %function
ChainTask:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_ChainTask, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service Schedule
  */
.global Schedule
.type   Schedule, %function
Schedule:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_Schedule, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service GetTaskID
  */
.global GetTaskID
.type   GetTaskID, %function
GetTaskID:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_GetTaskID, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service GetTaskState
  */
.global GetTaskState
.type   GetTaskState, %function
GetTaskState:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_GetTaskState, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service CallTerminateTask
  */
.global CallTerminateTask
.type   CallTerminateTask, %function
CallTerminateTask:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_CallTerminateTask, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     /*
      * Calla to avoid stack underflow
      */
    calla #tpl_sc_handler
    
 /*============================================================================
  * Service GetResource
  */
.global GetResource
.type   GetResource, %function
GetResource:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_GetResource, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service ReleaseResource
  */
.global ReleaseResource
.type   ReleaseResource, %function
ReleaseResource:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_ReleaseResource, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service Hibernate
  */
.global Hibernate
.type   Hibernate, %function
Hibernate:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_Hibernate, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service RestartOS
  */
.global tpl_restart_os
.type   tpl_restart_os, %function
tpl_restart_os:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_RestartOS, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service StartResurrect
  */
.global StartResurrect
.type   StartResurrect, %function
StartResurrect:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_StartResurrect, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service TerminateStepResurrect
  */
.global TerminateStepResurrect
.type   TerminateStepResurrect, %function
TerminateStepResurrect:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_TerminateStepResurrect, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    
 /*============================================================================
  * Service SetNbAlarmActivation
  */
.global SetNbAlarmActivation
.type   SetNbAlarmActivation, %function
SetNbAlarmActivation:
    /*-------------------------------------------------------------------------
     * Load the service id in REG_SID (R12 or R15, depending on the ABI)
     */
    mova   #OSServiceId_SetNbAlarmActivation, REG_SID
    /*-------------------------------------------------------------------------
     * Does the system call
     */
     bra #tpl_sc_handler
    

#define API_STOP_SEC_CODE
#include "tpl_as_memmap.h"


/* End of file tpl_invoque.S */

